                            | # File: copy.ys
                            | # Author: Junwei Lan
                            | # ID: PB20111689
                            | 
                            | # Execution begins at address 0
0x000:                      | .pos 0x0
0x000: 30f40002000000000000 |     irmovq stack, %rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src, %rdi        # first argument: src
0x052: 30f63000000000000000 |     irmovq dest, %rsi       # second argument: dest
0x05c: 30f20300000000000000 |     irmovq $3, %rdx         # third argument: memory length
0x066: 807000000000000000   |     call copy_block
0x06f: 90                   |     ret
                            | 
0x070:                      | copy_block:
0x070: 30f80800000000000000 |     irmovq $8, %r8          # get constant 8 to change address
0x07a: 30f90100000000000000 |     irmovq $1, %r9          # get constant 1 to change length
0x084: 6300                 |     xorq %rax, %rax         # set result = 0
0x086: 6222                 |     andq %rdx, %rdx         # set condition code 
0x088: 70ad00000000000000   |     jmp test
0x091:                      | loop:
0x091: 50a70000000000000000 |     mrmovq (%rdi), %r10     # get src value
0x09b: 6087                 |     addq %r8, %rdi          # change src address
0x09d: 40a60000000000000000 |     rmmovq %r10, (%rsi)     # move src value to dest
0x0a7: 6086                 |     addq %r8, %rsi          # change dest address
0x0a9: 63a0                 |     xorq %r10, %rax         # modify checksum
0x0ab: 6192                 |     subq %r9, %rdx          # change length--
0x0ad:                      | test:
0x0ad: 749100000000000000   |     jne loop
0x0b6: 90                   |     ret
                            | 
0x200:                      | .pos 0x200
0x200:                      | stack:
