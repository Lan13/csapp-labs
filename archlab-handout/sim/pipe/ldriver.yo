                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f62806000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71804000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Author: Junwei Lan
                            | # ID: PB200111689
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx		# if len >= 10, then execute
0x03c: 720602000000000000   | 	jl root					# else, we judge what len is
                            | 
0x045:                      | Loop10:						# loop unroll for 10
0x045: 50a70000000000000000 | 	mrmovq (%rdi), %r10		# make full use of bubble
0x04f: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x059: 50c71000000000000000 | 	mrmovq 16(%rdi), %r12
0x063: 50d71800000000000000 | 	mrmovq 24(%rdi), %r13
0x06d: 50e72000000000000000 | 	mrmovq 32(%rdi), %r14
0x077: 40a60000000000000000 | 	rmmovq %r10, (%rsi)		# make full use of bubble
0x081: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x08b: 40c61000000000000000 | 	rmmovq %r12, 16(%rsi)
0x095: 40d61800000000000000 | 	rmmovq %r13, 24(%rsi)
0x09f: 40e62000000000000000 | 	rmmovq %r14, 32(%rsi)
0x0a9: 62aa                 | 	andq %r10, %r10			# judge val > 0
0x0ab: 71be00000000000000   | 	jle next1
0x0b4: c0f00100000000000000 | 	iaddq $1, %rax			# count ++
0x0be:                      | next1:
0x0be: 62bb                 | 	andq %r11, %r11
0x0c0: 71d300000000000000   | 	jle next2
0x0c9: c0f00100000000000000 | 	iaddq $1, %rax
0x0d3:                      | next2:
0x0d3: 62cc                 | 	andq %r12, %r12
0x0d5: 71e800000000000000   | 	jle next3
0x0de: c0f00100000000000000 | 	iaddq $1, %rax
0x0e8:                      | next3:
0x0e8: 62dd                 | 	andq %r13, %r13
0x0ea: 71fd00000000000000   | 	jle next4
0x0f3: c0f00100000000000000 | 	iaddq $1, %rax
0x0fd:                      | next4:
0x0fd: 62ee                 | 	andq %r14, %r14
0x0ff: 711201000000000000   | 	jle next5
0x108: c0f00100000000000000 | 	iaddq $1, %rax
0x112:                      | next5:						# next 5 numbers
0x112: 50a72800000000000000 | 	mrmovq 40(%rdi), %r10
0x11c: 50b73000000000000000 | 	mrmovq 48(%rdi), %r11
0x126: 50c73800000000000000 | 	mrmovq 56(%rdi), %r12
0x130: 50d74000000000000000 | 	mrmovq 64(%rdi), %r13
0x13a: 50e74800000000000000 | 	mrmovq 72(%rdi), %r14
0x144: 40a62800000000000000 | 	rmmovq %r10, 40(%rsi)
0x14e: 40b63000000000000000 | 	rmmovq %r11, 48(%rsi)
0x158: 40c63800000000000000 | 	rmmovq %r12, 56(%rsi)
0x162: 40d64000000000000000 | 	rmmovq %r13, 64(%rsi)
0x16c: 40e64800000000000000 | 	rmmovq %r14, 72(%rsi)
0x176: 62aa                 | 	andq %r10, %r10
0x178: 718b01000000000000   | 	jle next6
0x181: c0f00100000000000000 | 	iaddq $1, %rax
0x18b:                      | next6:
0x18b: 62bb                 | 	andq %r11, %r11
0x18d: 71a001000000000000   | 	jle next7
0x196: c0f00100000000000000 | 	iaddq $1, %rax
0x1a0:                      | next7:
0x1a0: 62cc                 | 	andq %r12, %r12
0x1a2: 71b501000000000000   | 	jle next8
0x1ab: c0f00100000000000000 | 	iaddq $1, %rax
0x1b5:                      | next8:
0x1b5: 62dd                 | 	andq %r13, %r13
0x1b7: 71ca01000000000000   | 	jle next9
0x1c0: c0f00100000000000000 | 	iaddq $1, %rax
0x1ca:                      | next9:
0x1ca: 62ee                 | 	andq %r14, %r14
0x1cc: 71df01000000000000   | 	jle next10
0x1d5: c0f00100000000000000 | 	iaddq $1, %rax
0x1df:                      | next10:
0x1df: c0f75000000000000000 | 	iaddq $80, %rdi
0x1e9: c0f65000000000000000 | 	iaddq $80, %rsi
0x1f3: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx
0x1fd: 754500000000000000   | 	jge Loop10
                            | 	
0x206:                      | root:
0x206: c0f20700000000000000 | 	iaddq $7, %rdx
0x210: 765202000000000000   | 	jg label456789
0x219: 722b02000000000000   | 	jl label012
0x222: 738903000000000000   | 	je last3
0x22b:                      | label012:
0x22b: c0f20200000000000000 | 	iaddq $2, %rdx
0x235: 73db03000000000000   | 	je last1
0x23e: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x248: 73b203000000000000   | 	je last2
0x251: 90                   | 	ret
0x252:                      | label456789:
0x252: c0f2fdffffffffffffff | 	iaddq $-3, %rdx
0x25c: 768a02000000000000   | 	jg label789
0x265: 730e03000000000000   | 	je last6
0x26e: c0f20100000000000000 | 	iaddq $1, %rdx
0x278: 733703000000000000   | 	je last5
0x281: 726003000000000000   | 	jl last4
0x28a:                      | label789:
0x28a: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x294: 73bc02000000000000   | 	je last8
0x29d: 72e502000000000000   | 	jl last7
                            | 
0x2a6:                      | last9:
0x2a6: 50a74000000000000000 | 	mrmovq 64(%rdi), %r10
0x2b0: 40a64000000000000000 | 	rmmovq %r10, 64(%rsi)
0x2ba: 62aa                 | 	andq %r10, %r10
0x2bc:                      | last8:
0x2bc: 50a73800000000000000 | 	mrmovq 56(%rdi), %r10
0x2c6: 71d902000000000000   | 	jle next8_2
0x2cf: c0f00100000000000000 | 	iaddq $1, %rax		# add for last9
0x2d9:                      | next8_2:
0x2d9: 40a63800000000000000 | 	rmmovq %r10, 56(%rsi)
0x2e3: 62aa                 | 	andq %r10, %r10
0x2e5:                      | last7:
0x2e5: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x2ef: 710203000000000000   | 	jle next7_2:
0x2f8: c0f00100000000000000 | 	iaddq $1, %rax 		# add for last8
0x302:                      | next7_2:
0x302: 40a63000000000000000 | 	rmmovq %r10, 48(%rsi)
0x30c: 62aa                 | 	andq %r10, %r10
0x30e:                      | last6:
0x30e: 50a72800000000000000 | 	mrmovq 40(%rdi), %r10
0x318: 712b03000000000000   | 	jle next6_2:
0x321: c0f00100000000000000 | 	iaddq $1, %rax		# add for last7
0x32b:                      | next6_2:
0x32b: 40a62800000000000000 | 	rmmovq %r10, 40(%rsi)
0x335: 62aa                 | 	andq %r10, %r10
0x337:                      | last5:
0x337: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x341: 715403000000000000   | 	jle next5_2
0x34a: c0f00100000000000000 | 	iaddq $1, %rax 		# add for last 6
0x354:                      | next5_2:
0x354: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x35e: 62aa                 | 	andq %r10, %r10
0x360:                      | last4:
0x360: 50a71800000000000000 | 	mrmovq 24(%rdi), %r10
0x36a: 717d03000000000000   | 	jle next4_2
0x373: c0f00100000000000000 | 	iaddq $1, %rax		# add for last5
0x37d:                      | next4_2:
0x37d: 40a61800000000000000 | 	rmmovq %r10, 24(%rsi)
0x387: 62aa                 | 	andq %r10, %r10
0x389:                      | last3:
0x389: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x393: 71a603000000000000   | 	jle next3_2
0x39c: c0f00100000000000000 | 	iaddq $1, %rax		# add for last4
0x3a6:                      | next3_2:
0x3a6: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x3b0: 62aa                 | 	andq %r10, %r10
0x3b2:                      | last2:
0x3b2: 50a70800000000000000 | 	mrmovq 8(%rdi), %r10
0x3bc: 71cf03000000000000   | 	jle next2_2
0x3c5: c0f00100000000000000 | 	iaddq $1, %rax		# add for last3
0x3cf:                      | next2_2:
0x3cf: 40a60800000000000000 | 	rmmovq %r10, 8(%rsi)
0x3d9: 62aa                 | 	andq %r10, %r10
0x3db:                      | last1:
0x3db: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x3e5: 71f803000000000000   | 	jle next1_1
0x3ee: c0f00100000000000000 | 	iaddq $1, %rax 		# add for last2
0x3f8:                      | next1_1:
0x3f8: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x402: 62aa                 | 	andq %r10, %r10
0x404: 711704000000000000   | 	jle Done
0x40d: c0f00100000000000000 | 	iaddq $1, %rax		# add for last1
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x417:                      | Done:
0x417: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x418:                      | End:
                            | #/* $end ncopy-ys */
0x418:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x418:                      | 	.align 8
0x418:                      | src:
0x418: 0100000000000000     | 	.quad 1
0x420: feffffffffffffff     | 	.quad -2
0x428: fdffffffffffffff     | 	.quad -3
0x430: fcffffffffffffff     | 	.quad -4
0x438: fbffffffffffffff     | 	.quad -5
0x440: 0600000000000000     | 	.quad 6
0x448: 0700000000000000     | 	.quad 7
0x450: f8ffffffffffffff     | 	.quad -8
0x458: f7ffffffffffffff     | 	.quad -9
0x460: f6ffffffffffffff     | 	.quad -10
0x468: f5ffffffffffffff     | 	.quad -11
0x470: f4ffffffffffffff     | 	.quad -12
0x478: f3ffffffffffffff     | 	.quad -13
0x480: f2ffffffffffffff     | 	.quad -14
0x488: 0f00000000000000     | 	.quad 15
0x490: 1000000000000000     | 	.quad 16
0x498: efffffffffffffff     | 	.quad -17
0x4a0: eeffffffffffffff     | 	.quad -18
0x4a8: 1300000000000000     | 	.quad 19
0x4b0: 1400000000000000     | 	.quad 20
0x4b8: ebffffffffffffff     | 	.quad -21
0x4c0: eaffffffffffffff     | 	.quad -22
0x4c8: 1700000000000000     | 	.quad 23
0x4d0: e8ffffffffffffff     | 	.quad -24
0x4d8: 1900000000000000     | 	.quad 25
0x4e0: 1a00000000000000     | 	.quad 26
0x4e8: e5ffffffffffffff     | 	.quad -27
0x4f0: 1c00000000000000     | 	.quad 28
0x4f8: 1d00000000000000     | 	.quad 29
0x500: e2ffffffffffffff     | 	.quad -30
0x508: 1f00000000000000     | 	.quad 31
0x510: 2000000000000000     | 	.quad 32
0x518: dfffffffffffffff     | 	.quad -33
0x520: 2200000000000000     | 	.quad 34
0x528: 2300000000000000     | 	.quad 35
0x530: 2400000000000000     | 	.quad 36
0x538: 2500000000000000     | 	.quad 37
0x540: 2600000000000000     | 	.quad 38
0x548: d9ffffffffffffff     | 	.quad -39
0x550: d8ffffffffffffff     | 	.quad -40
0x558: d7ffffffffffffff     | 	.quad -41
0x560: 2a00000000000000     | 	.quad 42
0x568: 2b00000000000000     | 	.quad 43
0x570: d4ffffffffffffff     | 	.quad -44
0x578: 2d00000000000000     | 	.quad 45
0x580: 2e00000000000000     | 	.quad 46
0x588: d1ffffffffffffff     | 	.quad -47
0x590: d0ffffffffffffff     | 	.quad -48
0x598: 3100000000000000     | 	.quad 49
0x5a0: ceffffffffffffff     | 	.quad -50
0x5a8: cdffffffffffffff     | 	.quad -51
0x5b0: ccffffffffffffff     | 	.quad -52
0x5b8: 3500000000000000     | 	.quad 53
0x5c0: caffffffffffffff     | 	.quad -54
0x5c8: 3700000000000000     | 	.quad 55
0x5d0: 3800000000000000     | 	.quad 56
0x5d8: 3900000000000000     | 	.quad 57
0x5e0: 3a00000000000000     | 	.quad 58
0x5e8: 3b00000000000000     | 	.quad 59
0x5f0: c4ffffffffffffff     | 	.quad -60
0x5f8: c3ffffffffffffff     | 	.quad -61
0x600: c2ffffffffffffff     | 	.quad -62
0x608: 3f00000000000000     | 	.quad 63
0x610: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x620:                      | 	.align 16
0x620:                      | Predest:
0x620: fadebc0000000000     | 	.quad 0xbcdefa
0x628:                      | dest:
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0: abefcd0000000000     | 	.quad 0xcdefab
0x7c8: abefcd0000000000     | 	.quad 0xcdefab
0x7d0: abefcd0000000000     | 	.quad 0xcdefab
0x7d8: abefcd0000000000     | 	.quad 0xcdefab
0x7e0: abefcd0000000000     | 	.quad 0xcdefab
0x7e8: abefcd0000000000     | 	.quad 0xcdefab
0x7f0: abefcd0000000000     | 	.quad 0xcdefab
0x7f8: abefcd0000000000     | 	.quad 0xcdefab
0x800: abefcd0000000000     | 	.quad 0xcdefab
0x808: abefcd0000000000     | 	.quad 0xcdefab
0x810: abefcd0000000000     | 	.quad 0xcdefab
0x818: abefcd0000000000     | 	.quad 0xcdefab
0x820:                      | Postdest:
0x820: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x828:                      | .align 8
                            | # Run time stack
0x828: 0000000000000000     | 	.quad 0
0x830: 0000000000000000     | 	.quad 0
0x838: 0000000000000000     | 	.quad 0
0x840: 0000000000000000     | 	.quad 0
0x848: 0000000000000000     | 	.quad 0
0x850: 0000000000000000     | 	.quad 0
0x858: 0000000000000000     | 	.quad 0
0x860: 0000000000000000     | 	.quad 0
0x868: 0000000000000000     | 	.quad 0
0x870: 0000000000000000     | 	.quad 0
0x878: 0000000000000000     | 	.quad 0
0x880: 0000000000000000     | 	.quad 0
0x888: 0000000000000000     | 	.quad 0
0x890: 0000000000000000     | 	.quad 0
0x898: 0000000000000000     | 	.quad 0
0x8a0: 0000000000000000     | 	.quad 0
                            | 
0x8a8:                      | Stack:
